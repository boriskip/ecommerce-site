# nginx/default.conf
# Финальная, исправленная конфигурация с подробными комментариями.
# Эта версия создана для работы в Docker, где frontend и backend - два разных сервиса.

server {
    listen 80;
    server_name localhost;

    # Эта строка заставляет Nginx использовать внутренний DNS-сервер Docker.
    resolver 127.0.0.11 valid=30s;

    large_client_header_buffers 4 32k;  

location ~ ^/(api|login|logout|register|sanctum/csrf-cookie) {
    root /var/www/public;
    index index.php;
    include fastcgi_params;
    fastcgi_pass backend:9000;
    fastcgi_param SCRIPT_FILENAME $document_root/index.php;
    fastcgi_param SCRIPT_NAME /index.php;
    proxy_set_header Cookie $http_cookie;
    proxy_set_header X-XSRF-TOKEN $http_x_xsrf_token;
    proxy_pass_request_headers on;
}
# Обработка изображений из backend/public/images/
location /storage {
    alias /var/www/storage/app/public/;
    access_log off;
    log_not_found off;
    expires 1d;
}
    # БЛОК 2: ОБРАБОТКА ЗАПРОСОВ К ФРОНТЕНДУ (REACT)
    # --------------------------------------------------
    # Этот блок ловит ВСЕ ОСТАЛЬНЫЕ запросы.
    location / {
        # НОВОЕ ИСПРАВЛЕНИЕ: Используем переменную для proxy_pass.
        # Это заставляет Nginx отложить проверку имени хоста "frontend" до момента
        # получения первого запроса, что решает ошибку "host not found" при старте.
        set $frontend_proxy http://frontend:5173;
        proxy_pass $frontend_proxy;

        # Эти настройки необходимы, чтобы корректно работал WebSocket (Hot Reloading в Vite)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}