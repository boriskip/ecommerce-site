# nginx/default.conf
# Финальная, исправленная конфигурация с подробными комментариями.
# Эта версия создана для работы в Docker, где frontend и backend - два разных сервиса.

server {
    listen 80;
    server_name localhost;

    # Эта строка заставляет Nginx использовать внутренний DNS-сервер Docker.
    resolver 127.0.0.11 valid=30s;

    large_client_header_buffers 4 32k;  

    # БЛОК 1: ОБРАБОТКА ЗАПРОСОВ К BACKEND (LARAVEL API)
    # --------------------------------------------------
    # Этот блок ловит все запросы, начинающиеся с /api, /login, /logout, /register, /sanctum
    location ~ ^/(api|login|logout|register|sanctum/csrf-cookie) {
        # Убираем лишние директивы, которые не нужны для fastcgi
        include fastcgi_params;
        fastcgi_pass backend:9000;
        fastcgi_param SCRIPT_FILENAME /var/www/public/index.php;
        fastcgi_param SCRIPT_NAME /index.php;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param CONTENT_TYPE $content_type;
        fastcgi_param CONTENT_LENGTH $content_length;
        fastcgi_param REQUEST_URI $request_uri;
        fastcgi_param DOCUMENT_URI $document_uri;
        fastcgi_param DOCUMENT_ROOT $document_root;
        fastcgi_param SERVER_PROTOCOL $server_protocol;
        fastcgi_param GATEWAY_INTERFACE CGI/1.1;
        fastcgi_param SERVER_SOFTWARE nginx/$nginx_version;
        fastcgi_param REMOTE_ADDR $remote_addr;
        fastcgi_param REMOTE_PORT $remote_port;
        fastcgi_param SERVER_ADDR $server_addr;
        fastcgi_param SERVER_PORT $server_port;
        fastcgi_param SERVER_NAME $server_name;
        fastcgi_param HTTPS $https if_not_empty;
        fastcgi_param HTTP_COOKIE $http_cookie;
        fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
    }

    # Обработка изображений из backend/public/images/
    location /storage {
        alias /var/www/storage/app/public/;
        access_log off;
        log_not_found off;
        expires 1d;
    }

    # БЛОК 2: ОБРАБОТКА ЗАПРОСОВ К ФРОНТЕНДУ (REACT)
    # --------------------------------------------------
    # Этот блок ловит ВСЕ ОСТАЛЬНЫЕ запросы.
    location / {
        # НОВОЕ ИСПРАВЛЕНИЕ: Используем переменную для proxy_pass.
        # Это заставляет Nginx отложить проверку имени хоста "frontend" до момента
        # получения первого запроса, что решает ошибку "host not found" при старте.
        set $frontend_proxy http://frontend:5173;
        proxy_pass $frontend_proxy;

        # Эти настройки необходимы, чтобы корректно работал WebSocket (Hot Reloading в Vite)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}